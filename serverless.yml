service: api-rds-connector

custom:
  pythonRequirements:
    layer: true
    slim: true

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: eu-west-1
  deploymentBucket:
    name: allinone-aws-repo
    serverSideEncryption: AES256
  versionFunctions: true
  environment:
    RDS_SECRET_DB_CREDENTIALS: ${self:service}/${self:provider.stage}/db-credentials

package:
  exclude:
    - .gitignore
    - __pycache__/**
    - node_modules/**
    - .git/**
    - package*

# Lambdas
functions:
  employes:
    name: employes-${self:provider.stage}
    handler: employes.handler
    timeout: 30
    role: ConnectorRole
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - http:
          path: employes
          method: GET

resources:
  Resources:
    ConnectorRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:service}-rds-employe-role-${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: ${self:service}-rds-logs-policy-${self:provider.stage}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - ${self:provider.region}
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
          - PolicyName: rds-secretmanager-policy-${self:provider.stage}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - secretsmanager:GetSecretValue
                  Resource:
                    - Fn::Join:
                        - ":"
                        - - arn:aws:secretsmanager
                          - ${self:provider.region}
                          - Ref: "AWS::AccountId"
                          - secret
                          - "*"

plugins:
  - serverless-python-requirements
