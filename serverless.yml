service: services

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: eu-west-1
  deploymentBucket:
    name: allinone-aws-repo
    serverSideEncryption: AES256
  versionFunctions: true

package:
  exclude:
    - "aurora/*.dist-info"
    - "postgres/*.dist-info"

# Lambdas
functions:
  PostgresConnector:
    name: postgres-connector-${self:provider.stage}
    description: An AWS Lambda function processing connection on RDS - Postgres
    handler: connector.handler
    environment:
      RDS_HOST: xxxxxx
      RDS_USER: xxxxxx
      RDS_PWD: xxxxx
      RDS_DB: xxxx
    runtime: python3.7
    memorySize: 128
    timeout: 30
    role: ConnectorRole
    tags:
      kind: poc
      description: connector to rds postgres

resources:
  Resources:
    ConnectorRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: rds-connector-role-${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: rds-logs-policy-${self:provider.stage}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - ${self:provider.region}
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
          - PolicyName: rds-secretmanager-policy-${self:provider.stage}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - secretsmanager:GetSecretValue
                  Resource:
                    - Fn::Join:
                        - ":"
                        - - arn:aws:secretsmanager
                          - ${self:provider.region}
                          - Ref: "AWS::AccountId"
                          - secret
                          - "*"

Outputs:
  PostgresConnectorARN:
    Description: ARN of the lambda used to process connection on RDS - Postgres
    Value: !GetAtt [PostgresConnector, Arn]
    Export:
      Name: ${self:service}:${opt:stage}:PostgresConnectorARN
